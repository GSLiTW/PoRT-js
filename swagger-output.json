{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Network API",
    "description": "Network Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Blockchain",
      "description": "Endpoints"
    },
    {
      "name": "Deprecated",
      "description": "Deprecated Endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/blockchain": {
      "get": {
        "tags": [
          "Blockchain"
        ],
        "description": "return whole current blockchain.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/wallet": {
      "get": {
        "tags": [
          "Blockchain"
        ],
        "description": "return user wallet and wallet backup info.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/MPT": {
      "get": {
        "tags": [
          "Blockchain"
        ],
        "description": "return current MPT of current blockchain.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/transaction-pool": {
      "get": {
        "tags": [
          "Blockchain"
        ],
        "description": "return current transaction pool.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/inserttx/{blocknum}": {
      "get": {
        "tags": [
          "Blockchain"
        ],
        "description": "insert transaction into transaction pool.",
        "parameters": [
          {
            "name": "blocknum",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The number of block(csv file) to insert into transaction pool."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/searchsender": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "blocknum": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/MPT/Search/{key}": {
      "get": {
        "tags": [
          "Blockchain"
        ],
        "description": "Search MPT for specific key.",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "MPT key to be searched."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/transaction/third-block": {
      "get": {
        "tags": [
          "Blockchain"
        ],
        "description": "Add third block transactions to transaction pool.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/transaction/launch": {
      "post": {
        "tags": [
          "Deprecated"
        ],
        "description": "Launch a mock transaction.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/transaction/AddTx": {
      "post": {
        "tags": [
          "Blockchain"
        ],
        "description": "Add new transaction to transaction pool with tansaciton object.",
        "parameters": [
          {
            "name": "NewTx",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "NewTx": {
                  "example": "any"
                }
              }
            },
            "description": "A transaction object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/transaction/port2portTx": {
      "post": {
        "tags": [
          "Blockchain"
        ],
        "description": "Add new transaction to transaction pool with specified receiver port and value.",
        "parameters": [
          {
            "name": "receiverPort",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "receiverPort": {
                  "example": "any"
                },
                "sendValue": {
                  "example": "any"
                }
              }
            },
            "description": "transaction value"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/transaction/broadcast": {
      "post": {
        "tags": [
          "Blockchain"
        ],
        "description": "Broadcast transaction to exsisting peer.",
        "parameters": [
          {
            "name": "NewTx",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "NewTxs": {
                  "example": "any"
                }
              }
            },
            "description": "A transaction object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/PKA": {
      "get": {
        "tags": [
          "Blockchain"
        ],
        "description": "return backup PKA.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/addPKA/{port}": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "port",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/returnPK": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "ownerPort": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/getPK": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "trusteeport": {
                  "example": "any"
                },
                "trusteePK": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/deletePKA/{port}": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "port",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/backup": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/recoveryReq/{trusteeport}": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "trusteeport",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/recoveryReq": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/decrypt": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "publicKey": {
                  "example": "any"
                },
                "share": {
                  "example": "any"
                },
                "ownerurl": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/getResponse": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "share": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/combine": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/register-and-broadcast-node": {
      "get": {
        "tags": [
          "Blockchain"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/register-node": {
      "post": {
        "tags": [
          "Blockchain"
        ],
        "description": "register incoming node to node list and return known nodes to incoming node",
        "parameters": [
          {
            "name": "newNodeUrl",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "newNodeUrl": {
                  "example": "any"
                }
              }
            },
            "description": "Node Url"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/register-nodes-bulk": {
      "post": {
        "tags": [
          "Blockchain"
        ],
        "description": "register all nodes in request to node list",
        "parameters": [
          {
            "name": "allNetworkNodes",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "allNetworkNodes": {
                  "example": "any"
                }
              }
            },
            "description": "Node Url list"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/block/{blockHash}": {
      "get": {
        "tags": [
          "Blockchain"
        ],
        "description": "Get block with blockhash.",
        "parameters": [
          {
            "name": "blockHash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "blockhash to search block."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/transaction/{transactionId}": {
      "get": {
        "tags": [
          "Blockchain"
        ],
        "description": "Get block with blockhash.",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "blockHash",
            "description": "blockhash of a block.",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/address/{address}": {
      "get": {
        "tags": [
          "Blockchain"
        ],
        "description": "Get node data with address.",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "address of a node."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/block-explorer": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Creator": {
      "get": {
        "tags": [
          "Blockchain"
        ],
        "description": "1. Construct a Creator. 2. Check Creator validity. 3. Construct a new block. 4. Start cosigning. 5. Broadcast the new block to find Voters.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Voter": {
      "post": {
        "tags": [
          "Blockchain"
        ],
        "description": "Construct a Voter and valid it identity. If it is a voter, save the creator url and send info to creator.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "SeqNum": {
                  "example": "any"
                },
                "CreatorUrl": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Creator/Challenge": {
      "post": {
        "tags": [
          "Blockchain"
        ],
        "description": "get Voter info, save in Creator, and generate a challenge.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "VoterUrl": {
                  "example": "any"
                },
                "publicKey": {
                  "example": "any"
                },
                "publicV": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Voter/Response": {
      "post": {
        "tags": [
          "Blockchain"
        ],
        "description": "Verify the block, if valid then generate response and send to creator.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "example": "any"
                },
                "challenge": {
                  "example": "any"
                },
                "index": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Creator/GetResponses": {
      "post": {
        "tags": [
          "Blockchain"
        ],
        "description": "Get response, give voters index and aggregate response. If some voters disconnect, regenerate challenge.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "challenge": {
                  "example": "any"
                },
                "response": {
                  "example": "any"
                },
                "index": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Creator/GetBlock": {
      "post": {
        "tags": [
          "Blockchain"
        ],
        "description": "Endpoint of a round, reset parameters",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "seqNum": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/update-blockchain": {
      "post": {
        "tags": [
          "Blockchain"
        ],
        "description": "update the blockchain and broadcast it to all nodes",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "SeqNum": {
                  "example": "any"
                },
                "Blockchain": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "Transaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "0x43a1a360188faaa2b227c1133d66e155c240816b33d6cba682e9ab27dbc77012"
        },
        "sender": {
          "type": "string",
          "example": "04f586957689dd425776cb9dabf6c8fa5b311a175ede33e1e85b54c931b6d8fb14f8085a1b095e6886a25bbe346da08eb05e605f100e67272da7dac4d4c43d60bc"
        },
        "receiver": {
          "type": "string",
          "example": "04ddb66f61a02eb345d2c8da36fa269d8753c3a01863d28565f1c2cf4d4af8636fdd223365fd54c0040cb6401cfef4b1f2e3554ae9cc5de7a0fb9785a38aa724e8"
        },
        "value": {
          "type": "string",
          "example": "0.00297594"
        }
      }
    }
  }
}
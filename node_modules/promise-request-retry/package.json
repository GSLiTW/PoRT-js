{
  "_from": "promise-request-retry@^1.0.2",
  "_id": "promise-request-retry@1.0.2",
  "_inBundle": false,
  "_integrity": "sha512-zZmu19chRtC6TYeAZaELF8s+Zotl48M6bRnIVjcUrObEjpI4wk+2VpGVRaRgCG6isOqsK4c5IMY7t59Ff2ia0A==",
  "_location": "/promise-request-retry",
  "_phantomChildren": {
    "aws-sign2": "0.7.0",
    "aws4": "1.10.1",
    "bluebird": "3.7.2",
    "caseless": "0.12.0",
    "combined-stream": "1.0.8",
    "extend": "3.0.2",
    "forever-agent": "0.6.1",
    "form-data": "2.3.3",
    "har-validator": "5.1.5",
    "http-signature": "1.2.0",
    "is-typedarray": "1.0.0",
    "isstream": "0.1.2",
    "json-stringify-safe": "5.0.1",
    "mime-types": "2.1.27",
    "oauth-sign": "0.9.0",
    "performance-now": "2.1.0",
    "request-promise-core": "1.1.4",
    "safe-buffer": "5.1.2",
    "stealthy-require": "1.1.1",
    "tough-cookie": "2.5.0",
    "tunnel-agent": "0.6.0"
  },
  "_requested": {
    "escapedName": "promise-request-retry",
    "fetchSpec": "^1.0.2",
    "name": "promise-request-retry",
    "raw": "promise-request-retry@^1.0.2",
    "rawSpec": "^1.0.2",
    "registry": true,
    "saveSpec": null,
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/promise-request-retry/-/promise-request-retry-1.0.2.tgz",
  "_shasum": "539df6a82f7e3242a70f88be70fcf3ebb4e0aebe",
  "_spec": "promise-request-retry@^1.0.2",
  "_where": "/mnt/c/Users/leowa/Desktop/GoogleDrive/PoRT-Blockchain",
  "author": {
    "name": "Sushim Mukul Dutta"
  },
  "bugs": {
    "url": "https://github.com/void666/request-promise-retry/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "async": "^2.6.0",
    "bluebird": "^3.5.1",
    "coveralls": "^3.0.0",
    "req-cwd": "^2.0.0",
    "request": "^2.85.0",
    "request-promise": "^4.2.2",
    "winston": "^2.4.0"
  },
  "deprecated": false,
  "description": "Simple wrapper on request-promise for retry mechanism",
  "devDependencies": {
    "chai": "^4.1.2",
    "chai-subset": "^1.6.0",
    "coveralls": "^3.0.0",
    "eslint": "^5.5.0",
    "gulp": "^3.9.1",
    "gulp-eslint": "^4.0.0",
    "gulp-if": "^2.0.2",
    "gulp-istanbul": "^1.1.2",
    "gulp-mocha": "^3",
    "istanbul": "^0.4.5",
    "mocha": "^5.0.4",
    "yargs": "^8.0.2"
  },
  "engines": {
    "node": ">=6.11.1"
  },
  "homepage": "https://github.com/void666/request-promise-retry#readme",
  "keywords": [
    "bluebird",
    "http",
    "https",
    "promise-request-retry",
    "promised-request",
    "request",
    "request-promise",
    "request-promise-retry",
    "request-retry-promise",
    "retry",
    "retry",
    "then",
    "thenable",
    "xhr"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "promise-request-retry",
  "optionalDependencies": {},
  "readme": "## request-promise-retry \n#### [npm : promise-request-retry](https://www.npmjs.com/package/promise-request-retry)\n[![npm version](https://badge.fury.io/js/promise-request-retry.svg)](https://badge.fury.io/js/promise-request-retry)\n[![coverage status](https://coveralls.io/repos/github/void666/request-promise-retry/badge.svg)](https://coveralls.io/github/void666/request-promise-retry)\n[![build status](https://travis-ci.org/void666/request-promise-retry.svg?branch=master)](https://travis-ci.org/void666/request-promise-retry)\n[![npm downloads](https://img.shields.io/npm/dt/promise-request-retry.svg)](https://img.shields.io/npm/dt/promise-request-retry)\n\nSimple wrapper on top of [request-promise](https://github.com/request/request-promise) to replicate retry mechanism, i.e, it will try to reprocess the request till a valid response is obtained, or the number of retrys is exhausted. Supports all options from request-promise.\n\n### Usage\n-  additional parameter `retry` needed in `request-promise` options.\n- `retry` supports boolean (defaults to `1` retry) and positive integer.\n-  in order to ignore retry or use generic`request-promise`,just don't specify the `retry` parameter.\n\n#### GET Request sample with retry\n```\nvar rp = require('promise-request-retry');\nvar options = {\n    uri: 'https://api.github.com/user/repos',\n    qs: {\n        access_token: 'xxxxx xxxxx' // -> uri + '?access_token=xxxxx%20xxxxx'\n    },\n    headers: {\n        'User-Agent': 'Request-Promise'\n    },\n    json: true, // Automatically parses the JSON string in the response, \n    retry : 2, // will retry the call twice, in case of error.\n    verbose_logging : false, // will log errors only, if set to be true, will log all actions\n    accepted: [ 400, 404 ] // Accepted HTTP Status codes (will not retry if request response has any of these HTTP Status Code)\n    delay: 2000 // will delay retries by 2000 ms.  The default is 100. \n    factor: 2 // will multiple the delay by the factor each time a retry is attempted. \n};\n\nrp(options)\n    .then(function (repos) {\n        console.log('User has %d repos', repos.length);\n    })\n    .catch(function (err) {\n        // API call failed...\n    });\n```\n\n##### logging sample\n```\n2018-03-13T22:20:21.308Z - info: [request-promise-retry] calling http://adadadadad.com/ with retry 3\n2018-03-13T22:20:21.899Z - info: [request-promise-retry] Encountered error Error: getaddrinfo ENOTFOUND adadadadad.com adadadadad.com:80 for GET request to http://adadadadad.com/, retry count 3\n2018-03-13T22:20:21.904Z - info: [request-promise-retry] Encountered error Error: getaddrinfo ENOTFOUND adadadadad.com adadadadad.com:80 for GET request to http://adadadadad.com/, retry count 2\n2018-03-13T22:20:21.907Z - info: [request-promise-retry] Encountered error Error: getaddrinfo ENOTFOUND adadadadad.com adadadadad.com:80 for GET request to http://adadadadad.com/, retry count 1\n```\nFor rest of samples, please refer [`request-promise` documentation](https://github.com/request/request-promise).\n\n### Installation\n`npm install promise-request-retry`\n\n### Test\n`npm test`\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/void666/request-promise-retry.git"
  },
  "scripts": {
    "coveralls": "cat ./coverage/lcov.info | ./node_modules/.bin/coveralls",
    "eslint": "eslint test/. index.js",
    "eslint-fix": "eslint test/. index.js --fix",
    "test": "node_modules/gulp/bin/gulp.js test"
  },
  "version": "1.0.2"
}
